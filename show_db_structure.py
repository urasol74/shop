#!/usr/bin/env python3
import sqlite3
import os

DB_PATH = "/home/ubuntu/shop/instance/db-der.db"

def show_db_structure():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    if not os.path.exists(DB_PATH):
        print(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö {DB_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()
    
    print("=== –°–¢–†–£–ö–¢–£–†–ê –ë–ê–ó–´ –î–ê–ù–ù–´–• ===")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
    cur.execute("SELECT name FROM sqlite_master WHERE type='table'")
    tables = cur.fetchall()
    
    for table in tables:
        table_name = table[0]
        print(f"\nüìã –¢–ê–ë–õ–ò–¶–ê: {table_name}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
        cur.execute(f"PRAGMA table_info({table_name})")
        columns = cur.fetchall()
        
        print("   –ö–æ–ª–æ–Ω–∫–∏:")
        for col in columns:
            col_id, col_name, col_type, not_null, default_val, pk = col
            pk_mark = " üîë" if pk else ""
            not_null_mark = " NOT NULL" if not_null else ""
            default_mark = f" DEFAULT {default_val}" if default_val else ""
            print(f"     {col_id}. {col_name} ({col_type}){not_null_mark}{default_mark}{pk_mark}")
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cur.execute(f"SELECT COUNT(*) FROM {table_name}")
        count = cur.fetchone()[0]
        print(f"   –ó–∞–ø–∏—Å–µ–π: {count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        cur.execute(f"SELECT * FROM {table_name} LIMIT 3")
        examples = cur.fetchall()
        if examples:
            print("   –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö:")
            for i, row in enumerate(examples, 1):
                print(f"     {i}. {row}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏
    print(f"\nüîó –í–ù–ï–®–ù–ò–ï –ö–õ–Æ–ß–ò:")
    cur.execute("PRAGMA foreign_key_list(products)")
    fk_products = cur.fetchall()
    for fk in fk_products:
        print(f"   products.category_id ‚Üí categories.id")
    
    cur.execute("PRAGMA foreign_key_list(variants)")
    fk_variants = cur.fetchall()
    for fk in fk_variants:
        print(f"   variants.product_id ‚Üí products.id")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
    print(f"\nüìä –ò–ù–î–ï–ö–°–´:")
    cur.execute("SELECT name, sql FROM sqlite_master WHERE type='index'")
    indexes = cur.fetchall()
    for idx in indexes:
        print(f"   {idx[0]}: {idx[1]}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø–æ–ª—É
    print(f"\nüë• –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –ü–û–õ–£:")
    cur.execute("""
        SELECT gender, COUNT(*) as count
        FROM products
        WHERE gender != ''
        GROUP BY gender
        ORDER BY count DESC
    """)
    gender_stats = cur.fetchall()
    for gender, count in gender_stats:
        print(f"   - {gender}: {count} –ø—Ä–æ–¥—É–∫—Ç–æ–≤")
    
    conn.close()

if __name__ == "__main__":
    show_db_structure() 